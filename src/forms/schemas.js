import { rules } from "@/forms/rules.js";

export const schemaDevice = [
  {
    label: "Alias*",
    type: "FormField",
    state: "alias",
    colsSm: 6,
    hint: "*required. At least 4 characters",
    rules: [rules.required, rules.min(4)],
    isHidden: false,
    isPassword: false,
    isReadonly: false,
    hasCounter: false,
    hasHiddenControl: false,
  },
  {
    label: "API key",
    type: "FormField",
    state: "api_key",
    colsSm: 6,
    hint: "Read-only",
    rules: [rules.required, rules.min(4)],
    isHidden: true,
    isPassword: true,
    isReadonly: true,
    hasCounter: false,
    hasHiddenControl: true,
  },
  {
    label: "Fixed latitude",
    type: "FormField",
    state: "fixed_loc_lat",
    colsSm: 6,
    hint: "",
    rules: [],
    isHidden: false,
    isPassword: false,
    isReadonly: false,
    hasCounter: false,
    hasHiddenControl: false,
  },
  {
    label: "Fixed longitude",
    type: "FormField",
    state: "fixed_loc_lon",
    colsSm: 6,
    hint: "",
    rules: [],
    isHidden: false,
    isPassword: false,
    isReadonly: false,
    hasCounter: false,
    hasHiddenControl: false,
  },
];

export const schemaIdentifier = [
  {
    label: "Identifier*",
    type: "FormField",
    state: "identifier",
    colsSm: 12,
    hint: "*required. At least 4 characters",
    rules: [rules.required, rules.min(4)],
    isHidden: true,
    isPassword: true,
    isReadonly: false,
    hasCounter: true,
    hasHiddenControl: true,
  },
];

export const schemaIdentifierRO = [
  {
    label: "Identifier",
    type: "FormField",
    state: "identifier",
    colsSm: 12,
    hint: "Read-only",
    rules: [rules.required, rules.min(4)],
    isHidden: true,
    isPassword: true,
    isReadonly: true,
    hasCounter: false,
    hasHiddenControl: true,
  },
];

export const schemaPasswordEdit = [
  {
    label: "Password*",
    type: "FormField",
    state: "newpwd",
    colsSm: 12,
    hint: "*required. At least 8 characters",
    rules: [rules.required, rules.min(8)],
    isHidden: true,
    isPassword: true,
    isReadonly: false,
    hasCounter: true,
    hasHiddenControl: true,
  },
  {
    label: "Confirm password*",
    type: "FormField",
    state: "confirmpwd",
    colsSm: 12,
    hint: "*required. At least 8 characters",
    rules: [rules.required, rules.min(8)],
    isHidden: true,
    isPassword: true,
    isReadonly: false,
    hasCounter: true,
    hasHiddenControl: true,
  },
];

export const schemaPasswordNew = [
  {
    label: "Password",
    type: "FormField",
    state: "password",
    colsSm: 6,
    hint: "At least 8 characters",
    rules: [rules.required, rules.min(8)],
    isHidden: true,
    isPassword: true,
    isReadonly: false,
    hasCounter: true,
    hasHiddenControl: true,
  },
  {
    label: "Confirm password",
    type: "FormField",
    state: "password2",
    colsSm: 6,
    hint: "At least 8 characters",
    rules: [rules.required, rules.min(8)],
    isHidden: true,
    isPassword: true,
    isReadonly: false,
    hasCounter: true,
    hasHiddenControl: true,
  },
];

export const schemaUser = [
  {
    label: "Username*",
    type: "FormField",
    state: "username",
    colsSm: 6,
    hint: "*required. At least 4 characters",
    rules: [rules.required, rules.min(4)],
    isHidden: false,
    isPassword: false,
    isReadonly: false,
    hasCounter: false,
    hasHiddenControl: false,
  },
  {
    label: "Role*",
    type: "FormSelect",
    state: "role",
    colsSm: 6,
    hint: "*required. Select role",
    items: ["admin", "manager", "viewer"],
    rules: [rules.required],
    isReadonly: false,
    hasCounter: false,
  },
  {
    label: "Full Name*",
    type: "FormField",
    state: "fullname",
    colsSm: 12,
    hint: "*required. At least 4 characters",
    rules: [rules.required, rules.min(4)],
    isHidden: false,
    isPassword: false,
    isReadonly: false,
    hasCounter: false,
    hasHiddenControl: false,
  },
  {
    label: "E-mail",
    type: "FormField",
    state: "email",
    colsSm: 12,
    hint: "Optional mail address",
    rules: [rules.emptyOrEmail],
    isHidden: false,
    isPassword: false,
    isReadonly: false,
    hasCounter: false,
    hasHiddenControl: false,
  },
  {
    label: "API key",
    type: "FormField",
    state: "api_key",
    colsSm: 12,
    hint: "Leave empty for auto-generated key",
    rules: [rules.zeroOrMin(8)],
    isHidden: true,
    isPassword: true,
    isReadonly: false,
    hasCounter: true,
    hasHiddenControl: true,
  },
];

export const schemaUsername = [
  {
    label: "Username",
    type: "FormField",
    state: "username",
    colsSm: 12,
    hint: "User to share or unshare the affected devices with",
    rules: [],
    isHidden: false,
    isPassword: false,
    isReadonly: false,
    hasCounter: false,
    hasHiddenControl: false,
  },
];
